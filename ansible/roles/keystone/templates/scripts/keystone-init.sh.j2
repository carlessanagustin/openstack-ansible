#!/usr/bin/env bash

export OS_SERVICE_TOKEN={{ keystone_admin_token }}
export OS_SERVICE_ENDPOINT=http://{{ os_hosts.controller.management_ip }}:35357/v2.0

keystone tenant-list | grep -q admin || keystone tenant-create --name admin --description "Admin Tenant"
keystone user-list | grep -q admin || keystone user-create --name admin --pass {{ os_users.admin.password }} --email admin@openstack.com
keystone role-list | grep -q admin || keystone role-create --name admin

#Add the admin role to the admin tenant and user:
keystone user-role-list --user admin --tenant admin | grep -q admin || keystone user-role-add --user admin --tenant admin --role admin

keystone tenant-list | grep -q demo || keystone tenant-create --name demo --description "Demo Tenant"
keystone user-list | grep -q demo || keystone user-create --name demo --tenant demo --pass {{ os_users.demo.password }} --email demo@openstack.com

echo OpenStack services also require a tenant,
keystone tenant-list | grep -q service || keystone tenant-create --name service --description "Service Tenant"


echo "Create the service entity and API endpoints for the Identity service."
keystone service-list | grep -q keystone || keystone service-create --name keystone --type identity --description "OpenStack Identity"


#Create the Identity service API endpoints:
echo "http://{{ os_hosts.controller.management_ip }}:5000/v2.0"

keystone endpoint-list | grep -q "http://{{ os_hosts.controller.management_ip }}:5000/v2.0" || \
  keystone endpoint-create \
  --service-id $(keystone service-list | awk '/ identity / {print $2}') \
  --publicurl http://{{ os_hosts.controller.management_ip }}:5000/v2.0 \
  --internalurl http://{{ os_hosts.controller.management_ip }}:5000/v2.0 \
  --adminurl http://{{ os_hosts.controller.management_ip }}:35357/v2.0 \
  --region regionOne